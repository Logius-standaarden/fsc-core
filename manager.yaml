openapi: 3.0.3
info:
  title: FSC Core
  version: 1.0.0
  description: Manager REST API
servers:
  - url: https://{managerUrl}:8443/v1
    variables:
      managerUrl:
        default: localhost
        description: URL of the Manager
paths:
  /contracts:
    post:
      operationId: submitContract
      summary: Submit a new contract
      tags:
        - manager
      parameters:
        - $ref: '#/components/parameters/headerFscManagerAddress'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                contract_content:
                  $ref: '#/components/schemas/contractContent'
                signature:
                  description: An accept signature
                  type: string
                certificate_chain:
                  description: The certificate chain containing the certificate used to create the signature plus the intermediate certificates
                  type: string
                  format: byte
              required:
                - contract_content
                - signature
                - certificate_chain
      responses:
        201:
          description: Contract created
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
    get:
      tags:
        - manager
      summary: Returns Contracts
      parameters:
        - $ref: '#/components/parameters/headerFscManagerAddress'
        - $ref: '#/components/parameters/queryPaginationCursor'
        - $ref: '#/components/parameters/queryPaginationLimit'
        - $ref: '#/components/parameters/queryPaginationOrder'
        - in: query
          description: A list of Grant types on which to filter
          name: grant_type
          schema:
            type: array
            items:
              $ref: '#/components/schemas/grantType'
          required: false
          style: form
          explode: false
        - in: query
          description: A list of Grant hashes on which to filter
          name: grant_hash
          schema:
            type: array
            items:
              type: string
              description: The hash of a Grant
              example: $1$4$+PQI7we01qIfEwq4O5UioLKzjGBgRva6F5+bUfDlKxUjcY5yX1MRsn6NKquDbL8VcklhYO9sk18rHD6La3w/mg==
              maxLength: 1024
          required: false
          style: form
          explode: false
      responses:
        200:
          description: Contracts
          content:
            application/json:
              schema:
                type: object
                properties:
                  contracts:
                    description: List of Contracts
                    type: array
                    items:
                      $ref: '#/components/schemas/contract'
                  pagination:
                    $ref: '#/components/schemas/paginationResult'
                required:
                  - contracts
                  - pagination
  /contracts/{hash}/accept:
    put:
      summary: Accept contract
      operationId: acceptContract
      tags:
        - manager
      parameters:
        - $ref: '#/components/parameters/headerFscManagerAddress'
        - $ref: '#/components/parameters/pathContractHash'
      requestBody:
        $ref: '#/components/requestBodies/signatureRequest'
      responses:
        201:
          description: Signature created
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /contracts/{hash}/reject:
    put:
      summary: Reject contract
      operationId: rejectContract
      tags:
        - manager
      parameters:
        - $ref: '#/components/parameters/headerFscManagerAddress'
        - $ref: '#/components/parameters/pathContractHash'
      requestBody:
        $ref: '#/components/requestBodies/signatureRequest'
      responses:
        201:
          description: Signature created
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /contracts/{hash}/revoke:
    put:
      summary: Revoke contract
      operationId: revokeContract
      tags:
        - manager
      parameters:
        - $ref: '#/components/parameters/headerFscManagerAddress'
        - $ref: '#/components/parameters/pathContractHash'
        - in: path
          name: hash
          schema:
            description: The hash of the contract
            type: string
          required: true
      requestBody:
        $ref: '#/components/requestBodies/signatureRequest'
      responses:
        201:
          description: Signature created
        400:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/error'
  /certificates:
    get:
      summary: Returns certificates
      operationId: getCertificates
      tags:
        - manager
      parameters:
        - $ref: '#/components/parameters/headerFscManagerAddress'
        - $ref: '#/components/parameters/queryPaginationCursor'
        - $ref: '#/components/parameters/queryPaginationLimit'
        - $ref: '#/components/parameters/queryPaginationOrder'
        - in: query
          name: public_key_fingerprints
          schema:
            description: A list of Public Key fingerprints names on which to filter
            type: array
            items:
              $ref: '#/components/schemas/publicKeyFingerprint'
          style: form
          explode: false
          required: true
      responses:
        200:
          description: Certificates
          content:
            application/json:
              schema:
                properties:
                  certificates:
                    type: object
                    additionalProperties:
                      description: A map of public key fingerprints and certificates
                      type: string
                  pagination:
                    $ref: '#/components/schemas/paginationResult'
  /token:
    post:
      summary: Used to obtain a JWT which can be used to authorize a connection to a Service
      operationId: getToken
      tags:
        - manager
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                grant_type:
                  $ref: '#/components/schemas/oAuthGrantType'
                scope:
                  description: The scope should contain the hash of the Grant that contains the authorization for a connection to a Service
                  type: string
                  example: $1$4$+PQI7we01qIfEwq4O5UioLKzjGBgRva6F5+bUfDlKxUjcY5yX1MRsn6NKquDbL8VcklhYO9sk18rHD6La3w/mg==
                  maxLength: 1024
              required:
                - grant_type
                - scope
      responses:
        200:
          description: A token response
          content:
            application/json:
              schema:
                properties:
                  access_token:
                    description: The access token
                    type: string
                  token_type:
                    $ref: '#/components/schemas/oAuthTokenType'
                required:
                  - access_token
                  - token_type
  /peer:
    get:
      summary: Returns info about the Peer who is providing the Manager
      operationId: getPeerInfo
      tags:
        - manager
      parameters:
        - $ref: '#/components/parameters/headerFscManagerAddress'
      responses:
        200:
          description: Information about the Peer
          content:
            application/json:
              schema:
                type: object
                properties:
                  peer_id:
                    $ref: '#/components/schemas/peerID'
                  peer_name:
                    $ref: '#/components/schemas/peerName'
                  fsc_version:
                    $ref: '#/components/schemas/fscVersion'
                  enabled_extensions:
                    type: object
                    description: A map of extensions and versions
                    properties:
                      EXTENSION_DELEGATION:
                        description: The version of the transaction log extension. This key should only be set if the extension is enabled
                        type: string
                        maxLength: 16
                      EXTENSION_TRANSACTION_LOGGING:
                        description: The version of the transaction log extension. This key should only be set if the extension is enabled
                        type: string
                        maxLength: 16
                    example:
                      EXTENSION_DELEGATION: "1.0.0"
                      EXTENSION_TRANSACTION_LOGGING: "1.0.0"
                required:
                  - peer_id
                  - peer_name
                  - fsc_version
                  - enabled_extensions
  /peers:
    get:
      summary: Returns the Peers for which the Manager has a valid Contract with a PeerRegistrationGrant
      operationId: getPeers
      tags:
        - directory
      parameters:
        - $ref: '#/components/parameters/headerFscManagerAddress'
        - $ref: '#/components/parameters/queryPaginationCursor'
        - $ref: '#/components/parameters/queryPaginationLimit'
        - $ref: '#/components/parameters/queryPaginationOrder'
        - in: query
          description: A list of Peer IDs on which to filter
          name: peer_id
          schema:
            type: array
            items:
              $ref: '#/components/schemas/peerID'
          style: form
          explode: false
          required: false
      responses:
        200:
          description: A list of Peers
          content:
            application/json:
              schema:
                type: object
                properties:
                  peers:
                    description: A list of Peers
                    type: array
                    items:
                      $ref: '#/components/schemas/peer'
                  pagination:
                    $ref: '#/components/schemas/paginationResult'
                required:
                  - peers
                  - pagination
  /services:
    get:
      summary: Returns Services for which the Manager has a valid Contract with a ServicePublicationGrant
      operationId: getServices
      tags:
        - directory
      parameters:
        - $ref: '#/components/parameters/headerFscManagerAddress'
        - $ref: '#/components/parameters/queryPaginationCursor'
        - $ref: '#/components/parameters/queryPaginationLimit'
        - $ref: '#/components/parameters/queryPaginationOrder'
        - in: query
          description: A list of Peer IDs on which to filter
          name: peer_id
          schema:
            type: array
            items:
              $ref: '#/components/schemas/peerID'
          required: false
          style: form
          explode: false
        - in: query
          description: A list of service names on which to filter
          name: services
          schema:
            type: array
            items:
              $ref: '#/components/schemas/serviceName'
          required: false
          style: form
          explode: false
      responses:
        200:
          description: A list of Services
          content:
            application/json:
              schema:
                properties:
                  services:
                    description: A list of Services
                    type: array
                    items:
                      oneOf:
                        - $ref: '#/components/schemas/serviceListing'
                        - $ref: '#/components/schemas/delegatedServiceListing'
                  pagination:
                    $ref: '#/components/schemas/paginationResult'
                required:
                  - services
                  - pagination
components:
  parameters:
    pathContractHash:
      in: path
      name: hash
      description: The hash of the contract
      schema:
        type: string
        example: $1$1$ouqPHvHP9+ZDKo4YDNz4GGYENOQQ80knSVg6lJ/MjaTLE/o3GgD1Vzyzteu791X0rkX6FvlJzyBYdZuD6hlWrQ==
      required: true
    headerFscManagerAddress:
      in: header
      name: fsc_manager_address
      schema:
        type: string
        example: https://manager.com:8443
      required: true
    queryPaginationCursor:
        in: query
        name: cursor
        description: A base64 encoded string of the cursor from which paginated results should be returned. Leave empty for the first page
        schema:
          type: string
          format: base64
          example: cGVlcl9pZDoxMjM0NTY3ODkwMTIzNDU2Nzg5MA==
        required: false
    queryPaginationLimit:
      in: query
      name: limit
      description: The maximum number of results
      schema:
        type: integer
        maximum: 1000
        minimum: 1
      required: false
    queryPaginationOrder:
      in: query
      name: sort_order
      description: The sorting order of the results
      required: false
      schema:
        $ref: '#/components/schemas/sortOrder'
  requestBodies:
    signatureRequest:
      description: A signature request
      required: true
      content:
        application/json:
          schema:
            type: object
            properties:
              contract_content:
                $ref: '#/components/schemas/contractContent'
              signature:
                description: The signature
                type: string
                example: eyJhbGciOiJSUzUxMiIsIng1dCNTMjU2IjoiRzRYNEM0bmFXZmRERG5qSi9aV2RzNGFPcWhzVTZnUklPNlQxM1pMNEsyST0ifQ.eyJjb250ZW50SGFzaCI6IiQxJDEkWmFxbiszaWFoM2FkMmtuYjJKc2JhR2g2bi9rZ1UrUWpVK0pmTmhuVkdCd1RGbnN1TUNjOUlRcHlPM0xabmt0WUtaWWh4TnpKalh5RWlLMnVWZTZEZ3c9PSIsInR5cGUiOiJhY2NlcHQifQ.Qs7M3EBVWbrzhjPioDhbhNP8BJQqkxPOPq-Pm6oWL_ZO9m74TIeUHk1gQ1QcqZs_zGALjmDLuOSLLEgz3Qh4iK5jadex14z-i3xJObb5vcjVN326CxdJNzRZo60c9KWY4Nrh7ewziXJv8BQ3x4se62p5paCKdN8quWiG9J5gN4F5dmtZyae0rEhQsy-fy5ugLHPhR97cschr8OnlStVQKRYcUqn7obCnKLNOv-L9a02umsw6ha-G8CSMr3z9QZMfYcPABQAaR3XamUIR_T-ZGiZbpuTDaLfqztCP9jrZ7Q6g4J6SmQtxkcbzj4YdXXcwOr9aUO-07LZuH__tHGXU2bzgsObiClP5Fx13VT0zJzM5rdMtS5OnRwvznIFJUG1VkXXIRG9pVpffOM-kO-FsFW6BTWGi5nBJfi21nLUTh-bNVPB9O8WVfVBl8PwZ2HzjNy0asI_6I2jpweRh8-KNLM5ca18YS1VUS8cgfnc7qFcrnI8kxxDqyITOd2-LMRsngvmJpoJkmKjNIHbnJaoXdvMqFss7YHitJQi7wz3VUKLojK8XdaUc40KQtx7VIdBX9ClDdUFY1kXPxM_c0zLGsLn60a-4PLtUBZEPnBgxZd7-9st9ivBkPXylG9ZNqIe6aD4qxBtp91vI2w18X-MmYT-wb73PcF2IySAuzFk-uqI
              certificate_chain:
                description: The certificate chain containing the certificate used to create the signature plus intermediate certificates
                type: string
                format: bytes
            required:
              - contract_content
              - signature
              - certificate_chain
  schemas:
    paginationResult:
      type: object
      properties:
        next_cursor:
          description: A base64 encoded string of the cursor that can be used to retrieve the next page or an empty string if there are no more results
          type: string
    contract:
      description: A Contract
      type: object
      properties:
        content:
          $ref: '#/components/schemas/contractContent'
        signatures:
          $ref: '#/components/schemas/signatures'
      required:
        - content
        - signatures
    contractContent:
      description: The content of a Contract
      type: object
      properties:
        id:
          description: The ID of the Contract
          type: string
          format: byte
          example: ce754ff9-3d1d-4dac-9f76-2267ff36cb25
        group_id:
          description: The FSC Group ID (Directory URI)
          type: string
          example: example.fsc.com
        validity:
          type: object
          properties:
            not_before:
              description: A UTC Unix timestamp, the Contract is not valid before this date.
              type: integer
              format: int64
              example: 1672527600
              minimum: 0
            not_after:
              description: A UTC Unix timestamp, the Contract is not valid after this date.
              type: integer
              format: int64
              example: 1704063600
              minimum: 0
          required:
            - not_before
            - not_after
        grants:
          description: The Grants of the Contract
          type: array
          items:
            $ref: '#/components/schemas/grant'
        hash_algorithm:
          $ref: '#/components/schemas/hashAlgorithm'
        created_at:
          description: An UTC unix timestamp of the creation date of the Contract
          type: integer
          format: int64
          example: 1672527600
          minimum: 0
      required:
        - id
        - group_id
        - validity
        - grants
        - hash_algorithm
        - created_at
    signatures:
      type: object
      description: The accept, reject and revoke signatures
      properties:
        accept:
          $ref: '#/components/schemas/signatureEntry'
        reject:
          $ref: '#/components/schemas/signatureEntry'
        revoke:
          $ref: '#/components/schemas/signatureEntry'
      required:
        - accept
        - reject
        - revoke
    signatureEntry:
      description: Map of PeerIDs and accept signatures
      type: object
      additionalProperties:
        description: signature
        type: string
      example:
        "12345678901234567891": eyJhbGciOiJSUzUxMiIsIng1dCNTMjU2IjoiRzRYNEM0bmFXZmRERG5qSi9aV2RzNGFPcWhzVTZnUklPNlQxM1pMNEsyST0ifQ.eyJjb250ZW50SGFzaCI6IiQxJDEkWmFxbiszaWFoM2FkMmtuYjJKc2JhR2g2bi9rZ1UrUWpVK0pmTmhuVkdCd1RGbnN1TUNjOUlRcHlPM0xabmt0WUtaWWh4TnpKalh5RWlLMnVWZTZEZ3c9PSIsInR5cGUiOiJhY2NlcHQifQ.Qs7M3EBVWbrzhjPioDhbhNP8BJQqkxPOPq-Pm6oWL_ZO9m74TIeUHk1gQ1QcqZs_zGALjmDLuOSLLEgz3Qh4iK5jadex14z-i3xJObb5vcjVN326CxdJNzRZo60c9KWY4Nrh7ewziXJv8BQ3x4se62p5paCKdN8quWiG9J5gN4F5dmtZyae0rEhQsy-fy5ugLHPhR97cschr8OnlStVQKRYcUqn7obCnKLNOv-L9a02umsw6ha-G8CSMr3z9QZMfYcPABQAaR3XamUIR_T-ZGiZbpuTDaLfqztCP9jrZ7Q6g4J6SmQtxkcbzj4YdXXcwOr9aUO-07LZuH__tHGXU2bzgsObiClP5Fx13VT0zJzM5rdMtS5OnRwvznIFJUG1VkXXIRG9pVpffOM-kO-FsFW6BTWGi5nBJfi21nLUTh-bNVPB9O8WVfVBl8PwZ2HzjNy0asI_6I2jpweRh8-KNLM5ca18YS1VUS8cgfnc7qFcrnI8kxxDqyITOd2-LMRsngvmJpoJkmKjNIHbnJaoXdvMqFss7YHitJQi7wz3VUKLojK8XdaUc40KQtx7VIdBX9ClDdUFY1kXPxM_c0zLGsLn60a-4PLtUBZEPnBgxZd7-9st9ivBkPXylG9ZNqIe6aD4qxBtp91vI2w18X-MmYT-wb73PcF2IySAuzFk-uqI
    grant:
      description: A Grant
      type: object
      required:
        - type
      properties:
        type:
          $ref: '#/components/schemas/grantType'
        data:
          description: The details of the Grant
          oneOf:
            - $ref: '#/components/schemas/grantPeerRegistration'
            - $ref: '#/components/schemas/grantServicePublication'
            - $ref: '#/components/schemas/grantServiceConnection'
            - $ref: '#/components/schemas/grantDelegatedServiceConnection'
            - $ref: '#/components/schemas/grantDelegatedServicePublication'
      discriminator:
        propertyName: type
    grantPeerRegistration:
      description: A PeerRegistrationGrant
      type: object
      properties:
        directory:
          $ref: '#/components/schemas/directory'
        peer:
          description: The details of the Peer who is registering to the Directory
          type: object
          properties:
            id:
              $ref: '#/components/schemas/peerID'
            name:
              $ref: '#/components/schemas/peerName'
            manager_address:
              description: The address of the Manager of the Peer registering to the Directory
              type: string
              example: https://manager.com:8443
          required:
            - id
            - name
            - manager_address
      required:
        - directory
        - peer
    grantServiceConnection:
      description: A ServiceConnectionGrant
      type: object
      properties:
        outway:
          $ref: '#/components/schemas/outway'
        service:
          $ref: '#/components/schemas/service'
      required:
        - outway
        - service
        - public_key_fingerprints
    grantServicePublication:
      description: A ServicePublicationGrant
      type: object
      properties:
        directory:
          $ref: '#/components/schemas/directory'
        service:
          $ref: '#/components/schemas/service'
      required:
        - directory
        - service
        - peer_id
        - name
    grantDelegatedServiceConnection:
      description: A DelegatedServiceConnectionGrant
      type: object
      properties:
        delegator:
          $ref: '#/components/schemas/delegator'
        outway:
          $ref: '#/components/schemas/outway'
        service:
          $ref: '#/components/schemas/service'
      required:
        - delegator
        - outway
        - service
    grantDelegatedServicePublication:
      description: A DelegatedServicePublicationGrant
      type: object
      properties:
        delegator:
          $ref: '#/components/schemas/delegator'
        service:
          $ref: '#/components/schemas/service'
        directory:
          $ref: '#/components/schemas/directory'
      required:
        - delegator
        - service
        - directory
    outway:
      description: The details of the Outway for which a connection authorization was granted
      type: object
      properties:
        peer_id:
          $ref: '#/components/schemas/peerID'
        public_key_fingerprints:
          description: The public key fingerprints that are authorized to connect to the Service
          type: array
          items:
            $ref: '#/components/schemas/publicKeyFingerprint'
      required:
        - peer_id
        - public_key_fingerprints
    directory:
      description: The details of the Directory
      type: object
      properties:
        peer_id:
          $ref: '#/components/schemas/peerID'
      required:
        - peer_id
    service:
      description: The details of a Service
      type: object
      properties:
        peer_id:
          $ref: '#/components/schemas/peerID'
        name:
          $ref: '#/components/schemas/serviceName'
      required:
        - peer_id
        - name
    delegator:
      description: The details of a Delegator
      type: object
      properties:
        peer_id:
          $ref: '#/components/schemas/peerID'
      required:
        - peer_id
    serviceListing:
      properties:
        peer:
          $ref: '#/components/schemas/peer'
        name:
          $ref: '#/components/schemas/peerName'
      required:
        - peer
        - name
    delegatedServiceListing:
      properties:
        delegator:
          $ref: '#/components/schemas/peer'
        peer:
          $ref: '#/components/schemas/peer'
        name:
          $ref: '#/components/schemas/peerName'
      required:
        - delegator
        - peer
        - name
    hashType:
      description: The type of hash
      type: string
      enum:
        - HASH_TYPE_CONTRACT
        - HASH_TYPE_PEER_REGISTRATION_GRANT
        - HASH_TYPE_SERVICE_PUBLICATION_GRANT
        - HASH_TYPE_SERVICE_CONNECTION_GRANT
        - HASH_TYPE_DELEGATED_SERVICE_CONNECTION_GRANT
        - HASH_TYPE_DELEGATED_SERVICE_PUBLICATION_GRANT
    grantType:
      description: The type of Grant
      type: string
      enum:
        - GRANT_TYPE_PEER_REGISTRATION
        - GRANT_TYPE_SERVICE_PUBLICATION
        - GRANT_TYPE_SERVICE_CONNECTION
        - GRANT_TYPE_DELEGATED_SERVICE_CONNECTION
        - GRANT_TYPE_DELEGATED_SERVICE_PUBLICATION
    sortOrder:
      description: The order in which the results should be returned
      type: string
      enum:
        - SORT_ORDER_ASCENDING
        - SORT_ORDER_DESCENDING
    hashAlgorithm:
      description: The hashing algorithm
      type: string
      enum:
        - HASH_ALGORITHM_SHA3_512
    fscVersion:
      description: The version of the FSC specification
      type: string
      enum:
        - "1.0.0"
    oAuthGrantType:
      description: The grant_type of an access token request. FSC only uses client_credentials
      type: string
      enum:
        - client_credentials
    oAuthTokenType:
      description: The type of token. FSC only uses Bearer
      type: string
      enum:
        - bearer
    peerID:
      description: The ID of a Peer
      type: string
      example: "12345678901234567891"
      minLength: 3
      maxLength: 255
    peerName:
      description: The name of a Peer
      type: string
      example: "Peer A"
      minLength: 3
      maxLength: 255
    serviceName:
      description: The name of a service
      type: string
      example: random_service_name
      minLength: 3
      maxLength: 255
    publicKeyFingerprint:
      description: The fingerprint of a Public Key
      type: string
      example: h/CeVoeJ5vdaFGzNYPqiKWnGtDKB9UvIa/uk5Yvm7gs=
      maxLength: 1024
    peer:
      type: object
      properties:
        id:
          $ref: '#/components/schemas/peerID'
        name:
         $ref: '#/components/schemas/peerName'
        manager:
          type: object
          properties:
            address:
              description: The address of the Manager
              type: string
              example: https://manager.com:8443
              maxLength: 255
              minLength: 3
          required:
            - address
      required:
        - id
        - name
        - manager
    managerErrorCode:
      description: Error reasons that can be produced by the Manager
      type: string
      enum:
        - ERROR_CODE_PEER_NOT_PART_OF_CONTRACT
        - ERROR_CODE_SIGNATURE_CONTRACT_CONTENT_HASH_MISMATCH
        - ERROR_CODE_PEER_CERTIFICATE_VERIFICATION_FAILED
        - ERROR_CODE_PEER_ID_SIGNATURE_MISMATCH
        - ERROR_CODE_PEER_CERTIFICATE_UNAVAILABLE
        - ERROR_CODE_SIGNATURE_VERIFICATION_FAILED
    inwayErrorsCode:
      description: Error reasons that can be produced by the Inway
      type: string
      enum:
        - ERROR_CODE_ACCESS_TOKEN_MISSING
        - ERROR_CODE_ACCESS_DENIED
        - ERROR_CODE_SERVICE_NOT_FOUND
        - ERROR_CODE_SERVICE_UNREACHABLE
    outwayErrorCode:
      description: Error reasons that can be produced by the Outway
      type: string
      enum:
        - ERROR_CODE_GRANT_HASH_MISSING
        - ERROR_CODE_GRANT_UNKNOWN
        - ERROR_CODE_METHOD_UNSUPPORTED
    errorDomain:
      description: The FSC component in which the error occurred
      type: string
      enum:
        - ERROR_DOMAIN_INWAY
        - ERROR_DOMAIN_OUTWAY
        - ERROR_DOMAIN_MANAGER
    error:
      type: object
      properties:
        message:
          description: A message describing the error
          type: string
        domain:
          $ref: '#/components/schemas/errorDomain'
        code:
          description: A unique code specifying the error
          type: string
      required:
        - message
        - domain
        - reason
